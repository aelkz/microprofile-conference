<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016 IBM and others
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>microprofile-conference</artifactId>
        <groupId>io.microprofile.showcase</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>microservice-vote</artifactId>
    <packaging>war</packaging>

    <name>Conference :: Vote</name>

    <properties>
        <!-- Liberty server properties -->
        <wlpServerName>VoteServer</wlpServerName>
        <warName>vote-service-application</warName>
        <warVersion>1.0.0-SNAPSHOT</warVersion>
        <!--This is set in the ibm-web-ext.xml file -->
        <warContext>vote</warContext>
        <package.file>${project.build.directory}/${project.artifactId}${qualifier.jar}.jar</package.file>
        <packaging.type>runnable</packaging.type>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <testServerHttpPort>7070</testServerHttpPort>
        <testServerHttpsPort>9443</testServerHttpsPort>
        <service.name>${project.artifactId}</service.name>
        <service.port>9191</service.port>
        <container.port>8080</container.port>
        <docker.user>example</docker.user>
        <icon>http://microprofile.io/app/images/logo.png</icon>
    </properties>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.wildfly.swarm</groupId>
                <artifactId>wildfly-swarm-plugin</artifactId>
                <configuration>
                    <useUberJar>true</useUberJar>
                </configuration>
            </plugin>
            <plugin>
                <!-- https://github.com/fabric8io/fabric8-maven-plugin -->
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${version.fabric8.plugin}</version>
                <executions>
                    <execution>
                        <id>fmp</id>
                        <goals>
                            <goal>resource</goal>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <generator>
                        <includes>
                            <include>
                                wildfly-swarm
                            </include>
                        </includes>
                    </generator>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>createZip</id>
            <!-- Create a zip file containing app and server rather than a runnable jar -->
            <properties>
                <package.file>${project.build.directory}/${project.artifactId}.zip</package.file>
                <packaging.type>usr</packaging.type>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>net.wasdev.wlp.starters.microprofile</groupId>
            <artifactId>runtime-pom</artifactId>
            <version>0.0.1</version>
            <type>pom</type>
            <scope>runtime</scope>
        </dependency>
        <dependency>
           <groupId>javax.annotation</groupId>
           <artifactId>javax.annotation-api</artifactId>
           <version>1.2</version>
           <scope>provided</scope>
        </dependency>
        <dependency>
           <groupId>org.glassfish.jersey.core</groupId>
           <artifactId>jersey-common</artifactId>
           <version>2.23.2</version>
           <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-client</artifactId>
            <version>3.1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.0.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.microprofile.showcase</groupId>
            <artifactId>demo-bootstrap</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

</project>
